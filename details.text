we are going to use laravel fortify

--> composer require laravel/fortify

and then we need to publish it

--> php artisan vendor:publish

then we choose the index of
--> laravel\\Fortify\\FortifyServiceProvider

after that we migrate to database

after that we need to install bootstrap

-->npm i bootstrap@ popper.js sass sass-loader --save-dev

after the import of bootstrap we run

--> npm run dev

to make any changes in bootstrap or css run

--> npm run watch

------------------------------------------------------------------------------------------------------------------------

using laravel fortify to make user register and login

first we need to register fortifyService provider in config app.php in provider

--> App\Providers\FortifyServiceProvider::class,

the second thing we need to let laravel know where the login and register views will be

in app/provider/FortifyServiceProvider

after we crete the register blade and login blade the redirect is to home

to change the the home redirect from the providers/RouteServiceProvider

to see the routs in laravel system

--> php artisan route:list

------------------------------------------------------------------------------------------------------------------------

design our database with roles

--> php artisan make:model {name of the model} -a

--> php artisan make:migration create_role_user_table

after creating the tables and the foreign we go to models and create the relationships

------------------------------------------------------------------------------------------------------------------------
Seeding our Roles in the seeder

to make user seeder

--> php artisan make:seeder UserSeeder

to make the RoleUserSeeder after that

--> php artisan make:seeder RoleUserSeeder

to make resource controller with another directory

--> php artisan make:controller Admin\\UserController -r

------------------------------------------------------------------------------------------------------------------------

if u want to seed more data using tinker

--> php artisan tinker

User::factory()->count(50)->crete()

in the pagination we let laravel use bootstrap in appServiceProvider

------------------------------------------------------------------------------------------------------------------------
the different between sync and attach
 (sync)-> is to set array of variables to the object
 (attach)-> is to set one variable to the object

 for creating new user we need to mutate the password before storing it into data base

 for doing this in User Model we do
 {
    The name must start with set.
    set should be followed by the attribute name in the Pascal case. For example, to mutate the full_name attribute, use FullName.
    Finally, the name should end with Attribute.
}

to make the request validation

--> php artisan make:request UserRequest

------------------------------------------------------------------------------------------------------------------------
for checking the roles of the user we create two functions in the user model and the we call it in the

Auth service Provider

to make the middle ware

--> php artisan make:middleware AccessUser

to apply the middleware to route
we go to kernel.php in app/http  then we put

-->

